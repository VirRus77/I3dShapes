//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: 
//   Authors: VirRus77
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

struct I3DTri{
  ushort P1;
  ushort P2;
  ushort P3;
};

struct I3DVector{
  float P1;
  float P2;
  float P3;
};

struct I3DUV{
  float V;
  float U;
};

struct UnkFloat3{
  float unk1;
  float unk2;
  float unk3;
};

void Align(int mod){
  local int pos = FTell();
  local int newPos = ((pos+3)/4)*4;
  if(newPos - pos != 0) {
    byte Skip[newPos - pos] <bgcolor=0x808080,fgcolor=0x0000F0>;
  }
  //FSeek(newPos);
  Printf("Seed: %d -> %d\n", pos, newPos);
}
/*
struct ShortFlag {
  short Flag_1: 1 <bgcolor=0x20F0F0>;
  short Flag_2: 1 <bgcolor=0xF08080>;
  short Flag_3: 1 <bgcolor=0x20F080>;
  short Flag_4: 1 <bgcolor=0x20F0F0>;
  short Flag_5: 1 <bgcolor=0xF08080>;
  short Flag_6: 1 <bgcolor=0x20F080>;
  short Flag_7: 1 <bgcolor=0x20F0F0>;
  short Flag_8: 1 <bgcolor=0xF08080>;
  short Flag_9: 1 <bgcolor=0x20F080>;
  short Flag_10: 1 <bgcolor=0x20F0F0>;
  short Flag_11: 1 <bgcolor=0xF08080>;
  short Flag_12: 1 <bgcolor=0x20F080>;
  short Flag_13: 1 <bgcolor=0x20F0F0>;
  short Flag_14: 1 <bgcolor=0xF08080>;
  short Flag_15: 1 <bgcolor=0x20F080>;
  short Flag_16: 1 <bgcolor=0x20F0F0>;
};
*/

struct UnknownShortFlag7 {
  short Flag_1: 1 <bgcolor=0x20F0F0>;
  short Flag_2: 1 <bgcolor=0xF08080>;
  short Flag_3: 1 <bgcolor=0x20F080>;
  short Flag_4: 1 <bgcolor=0x20F0F0>;
  short Flag_5: 1 <bgcolor=0xF08080>;
  short Flag_6: 1 <bgcolor=0x20F080>;
  short Flag_7: 1 <bgcolor=0x20F0F0>;
  short Flag_8: 1 <bgcolor=0xF08080>;
  short Flag_9: 1 <bgcolor=0x20F080>;
  short Flag_10: 1 <bgcolor=0x20F0F0>;
  short Flag_11: 1 <bgcolor=0xF08080>;
  short Flag_12: 1 <bgcolor=0x20F080>;
  short Flag_13: 1 <bgcolor=0x20F0F0>;
  short Flag_14: 1 <bgcolor=0xF08080>;
  short Flag_15: 1 <bgcolor=0x20F080>;
  short Flag_16: 1 <bgcolor=0x20F0F0>;
};
struct UnknownShortFlag7_1 {
  short Flag_1: 1 <bgcolor=0x20F0F0>;
  short Flag_2: 1 <bgcolor=0xF08080>;
  short Flag_3: 1 <bgcolor=0x20F080>;
  short Flag_4: 1 <bgcolor=0x20F0F0>;
  short Flag_5: 1 <bgcolor=0xF08080>;
  short Flag_6: 1 <bgcolor=0x20F080>;
  short Flag_7: 1 <bgcolor=0x20F0F0>;
  short Flag_8: 1 <bgcolor=0xF08080>;
  short Flag_9: 1 <bgcolor=0x20F080>;
  short Flag_10: 1 <bgcolor=0x20F0F0>;
  short Flag_11: 1 <bgcolor=0xF08080>;
  short Flag_12: 1 <bgcolor=0x20F080>;
  short Flag_13: 1 <bgcolor=0x20F0F0>;
  short Flag_14: 1 <bgcolor=0xF08080>;
  short Flag_15: 1 <bgcolor=0x20F080>;
  short Flag_16: 1 <bgcolor=0x20F0F0>;
};

string FlagComment7(UnknownShortFlag7 &flag){
  string print;
  SPrintf(
    print,
    "%d %d %d %d %d %d %d %d | %d %d %d %d %d %d %d %d",
    flag.Flag_1,
    flag.Flag_2,
    flag.Flag_3,
    flag.Flag_4,
    flag.Flag_5,
    flag.Flag_6,
    flag.Flag_7,
    flag.Flag_8,
    flag.Flag_9,
    flag.Flag_10,
    flag.Flag_11,
    flag.Flag_12,
    flag.Flag_13,
    flag.Flag_14,
    flag.Flag_15,
    flag.Flag_16
  );
  return  print;
}

string FlagComment7_1(UnknownShortFlag7_1 &flag){
  string print;
  SPrintf(
    print,
    "%d %d %d %d %d %d %d %d | %d %d %d %d %d %d %d %d",
    flag.Flag_1,
    flag.Flag_2,
    flag.Flag_3,
    flag.Flag_4,
    flag.Flag_5,
    flag.Flag_6,
    flag.Flag_7,
    flag.Flag_8,
    flag.Flag_9,
    flag.Flag_10,
    flag.Flag_11,
    flag.Flag_12,
    flag.Flag_13,
    flag.Flag_14,
    flag.Flag_15,
    flag.Flag_16
);
  return  print;
}

/*
uint nameLen;
char Name[nameLen] <fgcolor=0xF0F000>;
Align(4);
*/
// 0x20F080 0x20F0F0 0xF08080
uint ShapeId <bgcolor=0x20F080,fgcolor=0x800000>;

float BoundingVolumeX  <bgcolor=0x20F0F0>;
float BoundingVolumeY  <bgcolor=0xF08080>;
float BoundingVolumeZ  <bgcolor=0x20F080>;
float BoundingVolumeR  <bgcolor=0x20F0F0>;
int VertexCount <bgcolor=0xF08080>;
int Unknown6 <bgcolor=0x20F080>;
int Vertices <bgcolor=0x20F0F0>;
UnknownShortFlag7   Unknown7   <comment=FlagComment7>;
UnknownShortFlag7_1 Unknown7_1 <comment=FlagComment7_1>;
int Unknown8 <bgcolor=0x20F080>;
int UvCount <bgcolor=0x20F0F0>;
int Unknown9 <bgcolor=0xF08080>;
int VertexCount2 <bgcolor=0x20F080>;

I3DTri Triangles[VertexCount / 3] <bgcolor=0x20F0F0>;
Align(4);
I3DVector Positions[Vertices] <bgcolor=0xF08080>;
I3DVector Normals[Vertices] <bgcolor=0x20F080>;

if(Unknown7.Flag_8) {
  float Unk2[UvCount*4]<bgcolor=0xE000F0>;
}

I3DUV UVs[UvCount] <bgcolor=0x20F0F0>;

DWORD Additions <bgcolor=0xE000F0>;
